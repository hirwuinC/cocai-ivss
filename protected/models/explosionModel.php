<?php   class explosionModel extends Model{    protected $query;    public function __construct(){      parent::__construct();    }    public function __destruct(){      ;    }   function abrirArchivo($valor=false){      #print_r($valor); echo "<br>"; exit();      $resultado=false;      $j=0; $indi=0;      $fecha = date ('Ymd');      $directorio = 'public/archivos/';      $archivos = scandir($directorio);       $totalArchivos = count($archivos);      #print_r($tiendas)."<br>";      #print_r($archivos)."<br>";      if ($totalArchivos > 2) {         #echo "P<br>";        for ($i=2; $i < count($archivos); $i++) {         #echo $valor['t']; echo $modelo; echo "<br>";         $ruta = $directorio.$archivos[$i];         $lineas = count(file($ruta));           //echo $ruta."<br>".$valor['t']."<br>".$lineas."<br>";          $fp= fopen($ruta,"r");         $arrayfichero=file($ruta); // print_r($arrayfichero); exit();         list($cod,$nombre,$nCorto,$division,$pais,$numEstacion,$transa,$vent,$date,$turno,$hora) = explode(',',$arrayfichero[$lineas-1]);         //$nombreCorreoto es para certificar que el sistema no considere ningun archivo con un nombre que no corresponde          //echo $cod."<br>";         date_default_timezone_set('America/asuncion');         $horaCarga=date('h:ma',fileatime($ruta));         $nombreCorrecto=$date.'-'.$numEstacion.'-'.$cod.'.txt';          if ($valor['t'] == $cod || empty($valor['t'])) {          //echo "freddy";           if($date == $fecha && $nombreCorrecto == $archivos[$i]){             //echo "freddy <br>";            // echo $nombreCorrecto; echo "BUENO <br>"; //exit();             //echo $j."<br>";             $resultado[$j] = array(                        'codigos'     => $cod,                        'nombre'     => $nombre,                        'nombreCorto'     => $nCorto,                        'division'      => $division,                        'pais'     => $pais,                        'numEstacion' => $numEstacion,                        'transaccion' => $transa,                        'ventas'      => $vent,                        'fecha' => $date,                        'turno' => $turno,                        'hora' => $hora,                        'modelo' => $modelo,                        'horaCarga' => $horaCarga             );              $j++;          }else{            #echo "string";            fclose($fp);            unlink($ruta);         }        }                }                   }else{          #echo "POR AQUI<br>";          $resultado[0] = array(             'codigos'  => NULL,             'modelo'  => $valor['m'],            'transaccion' => 0,            'ventas'      => 0          );      }       #echo "<br><br>"; print_r($resultado); echo "<br><br>";       # exit();        return $resultado;    }   /* public function productosSinUsar($codigoPadre){      $string = " ";      try {      $this->_db->beginTransaction();      $query = "SELECT nombre FROM combo where codigoPadre = ".$codigoPadre."";      $auxiliar = $this->_db->query($query);      $resultado = $auxiliar->fetchAll();      for ($i=0; $i < count($resultado) ; $i++) {          $aux[$i]= $resultado[$i]['nombre'];         $cadena = "and profesor_id != $aux[$i] ";         $string = $string.$cadena;              }         $query = "SELECT DISTINCT producto.nombre as 'producto', grupo.nombre as 'grupo' FROM producto           where referencia.id = ".$carrera." and (materia_id != ".$materia." or materia_id is null) ".$string;       $auxiliar2 = $this->_db->query($query);       $result2= $auxiliar2->fetchAll();                      //Controller::Vardump($result2);        $this->_db->commit();        }        catch (Exception $e){                    $this->_db-rollBack();          echo "Error :: ".$e->getMessage();          exit();                  }                return $result2;          } */      }?>